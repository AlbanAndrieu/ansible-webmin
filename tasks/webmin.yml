---
# This playbook contains common plays that will be run on all nodes.

#If Debian complains about missing dependencies, you can install them with the command
#- name: webmin | Install webmin dependencies
#  apt: pkg={{ item }} state=present update_cache=yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  with_items:
#   - perl
#   - libnet-ssleay-perl
#   - openssl
#   - libauthen-pam-perl
#   - libpam-runtime
#   - libio-pty-perl
#   - apt-show-versions
#   - python

- name: webmin | Addkey webmin
  apt_key: url=http://www.webmin.com/jcameron-key.asc state=present
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['17.04']
  become: yes

- name: webmin | Add webmin repo
#  apt_repository: repo='deb http://download.webmin.com/download/repository {{ansible_lsb.codename}} contrib' update_cache=yes
  apt_repository: repo='deb http://download.webmin.com/download/repository sarge contrib' update_cache=yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['14.04','17.04']
  become: yes

- name: webmin | Add webmin mirror repo
  apt_repository: repo='deb http://webmin.mirror.somersettechsolutions.co.uk/repository {{ansible_lsb.codename}} contrib' update_cache=yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['17.04']
  become: yes
  ignore_errors: true

- name: webmin | Install webmin
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ webmin_pkg_state|default('present') }}"
  when: ansible_distribution_version not in ['17.04']
  with_items:
   - webmin
  become: yes
  
- name: webmin | Install Webmin
  pkgutil: name={{ item }} state=present
  when: ((ansible_distribution == 'Solaris') and (ansible_distribution_version not in ['11.1']))
  with_items:
   - SUNWwebminr  
   
#- name: webmin | Setup webmin
#  command: /usr/sfw/lib/webmin/setup.sh
#  when: ((ansible_distribution == 'Solaris') and (ansible_distribution_version not in ['11.1']))  
#  become: yes

#- name: webmin | Enable webmin
#  command: /usr/sbin/svcadm enable webmin
#  when: ((ansible_distribution == 'Solaris') and (ansible_distribution_version not in ['11.1']))  
#  become: yes

- name: Remove duplicate entry.
  file: name=/etc/apt/sources.list.d/{{ item }} state=absent
  become: yes
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )
  with_items: webmin_repo_files
